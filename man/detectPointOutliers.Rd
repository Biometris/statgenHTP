% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/detectPointOutliers.R
\name{detectPointOutliers}
\alias{detectPointOutliers}
\title{detectPointOutliers}
\usage{
detectPointOutliers(
  TP,
  trait,
  plotIds = NULL,
  confIntSize = 5,
  mylocfit = 0.5,
  useTimeNumber = FALSE,
  timeNumber = NULL
)
}
\arguments{
\item{TP}{An object of class TP.}

\item{trait}{A character vector indicating the trait to model in TP.}

\item{plotIds}{A character vector of plotIds for which the outliers should be
detected. If \code{NULL}, all plotId in TP are used.}

\item{confIntSize}{A numeric value defining the confidence interval.}

\item{mylocfit}{A numeric value defining the constant component of the
smoothing parameter nn. (see the locfit())}

\item{useTimeNumber}{Should the timeNumber be used instead of the timePoint?}

\item{timeNumber}{If \code{useTimeNumber = TRUE}, a character vector
indicating the column containing the numerical time to use.}
}
\value{
An object of class pointOutliers, a data.frame with the following
columns.
\describe{
\item{plotId}{the id variable}
\item{timePoint}{time variable in datain}
\item{trait}{name of the modeled variable in datain}
\item{yPred}{the locfit prediction}
\item{sd_yPred}{standard deviation of the prediction}
\item{lwr}{lower bound of the confidence interval}
\item{upr}{upper bound of the confidence interval}
\item{outlier}{flag of detected outlier (0 is outlier, 1 is not)}
}
}
\description{
Function to model each curve of a dataset using a local regression. This is
the first step of the detection of outlying points in a curve.
}
\details{
see locfit() help function from the locfit R library. The user can act on:
\describe{
\item{mylocfit}{the constant of the smoothing parameter. Increase mylocfit
to have a very smooth curve}
\item{confIntSize}{the level to calculate the confidence interval. Increase
confIntSize to exclude less outliers}
}
to produce the grahics of the prediction and detected outliers, please use
plotDetectPointOutlierLocFit() function.
}
\examples{
## Create a TP object containing the data from the Phenovator.
PhenovatorDat1 <- PhenovatorDat1[!PhenovatorDat1$pos \%in\%
                                 c("c24r41", "c7r18", "c7r49"), ]
phenoTP <- createTimePoints(dat = PhenovatorDat1,
                            experimentName = "Phenovator",
                            genotype = "Genotype",
                            timePoint = "timepoints",
                            repId = "Replicate",
                            plotId = "pos",
                            rowNum = "y", colNum = "x",
                            addCheck = TRUE,
                            checkGenotypes = c("check1", "check2",
                                               "check3", "check4"))

## First select a subset of plants, for example here 9 plants
plantSel <- phenoTP[[1]]$plotId[1:9]
# Then run on the subset
resuVatorHTP <- detectPointOutliers(TP = phenoTP,
                                    trait = "EffpsII",
                                    plotIds = plantSel,
                                    confIntSize = 3,
                                    mylocfit = 0.1)

}
\seealso{
plot.pointOutliers

Other Detect point outliers: 
\code{\link{plot.pointOutliers}()},
\code{\link{removePointOutliers}()}
}
\concept{Detect point outliers}
